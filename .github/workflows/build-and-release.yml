name: Build and Deploy

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  release:
    types: [ created ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Build project
      run: npm run build
      
    - name: Check build output
      run: |
        ls -la dist/
        echo "Checking required files exist..."
        test -f dist/bundle.js || exit 1
        test -f dist/index.css || exit 1
        test -f dist/theme.css || exit 1
        echo "âœ… All required build files present"

  deploy:
    needs: test
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master')
    
    permissions:
      contents: read
      pages: write
      id-token: write
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Build project
      run: npm run build
      
    - name: Setup Pages
      uses: actions/configure-pages@v3
      
    - name: Upload to GitHub Pages
      uses: actions/upload-pages-artifact@v2
      with:
        path: ./docs
        
    - name: Deploy to GitHub Pages
      id: deployment
      uses: actions/deploy-pages@v2
        
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: dotbox-ui-dist
        path: dist/
        retention-days: 30

  release:
    needs: test
    runs-on: ubuntu-latest
    if: github.event_name == 'release'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        registry-url: 'https://registry.npmjs.org'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Build project
      run: npm run build
      
    - name: Create release archive
      run: |
        # Create a release archive with dist files
        mkdir -p release
        cp -r dist/ release/
        cp package.json release/
        cp README.md release/
        cp CONTRIBUTING.md release/
        tar -czf dotbox-ui-${{ github.event.release.tag_name }}.tar.gz -C release .
        
    - name: Upload release assets
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ github.event.release.upload_url }}
        asset_path: ./dotbox-ui-${{ github.event.release.tag_name }}.tar.gz
        asset_name: dotbox-ui-${{ github.event.release.tag_name }}.tar.gz
        asset_content_type: application/gzip
        
    - name: Upload individual dist files
      run: |
        # Upload individual dist files as release assets
        for file in dist/*; do
          if [ -f "$file" ]; then
            filename=$(basename "$file")
            echo "Uploading $filename..."
            curl \
              -X POST \
              -H "Accept: application/vnd.github.v3+json" \
              -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
              -H "Content-Type: application/octet-stream" \
              --data-binary @"$file" \
              "${{ github.event.release.upload_url }}?name=$filename&label=$filename"
          fi
        done

