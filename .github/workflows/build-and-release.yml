name: Build and Deploy

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  release:
    types: [ created ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Build project
      run: npm run build
      
    - name: Check build output
      run: |
        ls -la dist/
        echo "Checking required files exist..."
        test -f dist/bundle.js || exit 1
        test -f dist/index.css || exit 1
        test -f dist/theme.css || exit 1
        echo "âœ… All required build files present"

  deploy:
    needs: test
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master')
    
    permissions:
      contents: write
      pages: write
      id-token: write
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Build project
      run: npm run build
      
    - name: Setup Pages
      uses: actions/configure-pages@v4
      
    - name: Upload to GitHub Pages
      uses: actions/upload-pages-artifact@v3
      with:
        path: ./docs
        
    - name: Deploy to GitHub Pages
      id: deployment
      uses: actions/deploy-pages@v4
        
    - name: Generate version tag
      id: version
      run: |
        # Generate version based on timestamp and short commit hash
        VERSION="auto-$(date +%Y%m%d-%H%M%S)-$(git rev-parse --short HEAD)"
        echo "version=$VERSION" >> $GITHUB_OUTPUT
        echo "Generated version: $VERSION"
        
    - name: Create release archive
      run: |
        # Create a release archive with dist files
        mkdir -p release
        cp -r dist/ release/
        cp package.json release/
        cp README.md release/
        cp CONTRIBUTING.md release/
        tar -czf dotbox-ui-${{ steps.version.outputs.version }}.tar.gz -C release .
        
    - name: Create automatic release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: ${{ steps.version.outputs.version }}
        name: "Auto Release ${{ steps.version.outputs.version }}"
        body: |
          ðŸ¤– **Automatic Release**
          
          This release was automatically generated from the latest master branch.
          
          **Changes in this release:**
          - Commit: ${{ github.sha }}
          - Build timestamp: $(date -u)
          
          **Usage:**
          ```html
          <!-- CSS -->
          <link rel="stylesheet" href="https://github.com/andymcloid/dotbox-ui/releases/download/${{ steps.version.outputs.version }}/index.css">
          <link rel="stylesheet" href="https://github.com/andymcloid/dotbox-ui/releases/download/${{ steps.version.outputs.version }}/theme.css">
          
          <!-- JavaScript -->
          <script src="https://github.com/andymcloid/dotbox-ui/releases/download/${{ steps.version.outputs.version }}/bundle.js"></script>
          ```
          
          Or use the latest release:
          ```html
          <link rel="stylesheet" href="https://github.com/andymcloid/dotbox-ui/releases/latest/download/index.css">
          <link rel="stylesheet" href="https://github.com/andymcloid/dotbox-ui/releases/latest/download/theme.css">
          <script src="https://github.com/andymcloid/dotbox-ui/releases/latest/download/bundle.js"></script>
          ```
        files: |
          dotbox-ui-${{ steps.version.outputs.version }}.tar.gz
          dist/bundle.js
          dist/index.css
          dist/theme.css
        prerelease: false
        make_latest: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

